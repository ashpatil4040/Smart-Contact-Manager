spring.application.name=scm2.0

# Database connection
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA configuration
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# OAuth2 client configuration
# Google OAuth2 configuration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email

# GitHub OAuth2 configuration
spring.security.oauth2.client.registration.github.client-name=github
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=profile,email

# Cloudinary configuration
cloudinary.cloud.name=${CLOUDINARY_NAME}
cloudinary.api.key=${CLOUDINARY_KEY}
cloudinary.api.secret=${CLOUDINARY_SECRET}

# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Server configuration
server.address=0.0.0.0
server.port=${PORT:10000}
server.tomcat.connection-timeout=120000
server.tomcat.keep-alive-timeout=120000
