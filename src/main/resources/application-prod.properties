spring.application.name=scm2.0
# Database connection for Render PostgreSQL
spring.datasource.url=jdbc:postgresql://dpg-cus3hkt6l47c73afpnmg-a.oregon-postgres.render.com:5432/scm20_59b1
spring.datasource.username=scm20_59b1_user
spring.datasource.password=q8IpZ9QlaDIw8SuipqlYUGnqn1b5nj2X
spring.datasource.driver-class-name=org.postgresql.Driver

# Make sure to activate prod profile
spring.profiles.active=prod
# JPA configuration optimized for production
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update

# Server configuration for Render
server.address=0.0.0.0
server.port=${PORT:10000}
server.tomcat.connection-timeout=120000
server.tomcat.keep-alive-timeout=120000

# OAuth2 client configuration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email

spring.security.oauth2.client.registration.github.client-name=github
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=profile,email

# Cloudinary configuration
cloudinary.cloud.name=${CLOUDINARY_NAME}
cloudinary.api.key=${CLOUDINARY_KEY}
cloudinary.api.secret=${CLOUDINARY_SECRET}

# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
